name: Check for Version Updates

on:
  schedule:
    - cron: '0 6 * * 1' # Every Monday at 6 AM UTC
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  discover-images:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Discover images with check-version.sh
        id: set-matrix
        run: |
          # Find all directories under images/ that contain check-version.sh
          images=$(find images -mindepth 2 -maxdepth 2 -name "check-version.sh" -exec dirname {} \; | xargs -I {} basename {} | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$images" >> $GITHUB_OUTPUT
          echo "Found images: $images"

  check-updates:
    needs: discover-images
    runs-on: ubuntu-latest
    if: needs.discover-images.outputs.matrix != '[]'
    strategy:
      matrix:
        image: ${{ fromJson(needs.discover-images.outputs.matrix) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for updates
        id: check
        working-directory: images/${{ matrix.image }}
        run: |
          if [ -f check-version.sh ]; then
            chmod +x check-version.sh
            ./check-version.sh
          else
            echo "No check-version.sh found for ${{ matrix.image }}"
            exit 1
          fi

      - name: Create Pull Request
        if: steps.check.outputs.update_available == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(images/${{ matrix.image }}): update to ${{ steps.check.outputs.new_version }}"
          title: "chore(images/${{ matrix.image }}): update to ${{ steps.check.outputs.new_version }}"
          body: |
            ## Update ${{ matrix.image }} image

            **Current version:** `${{ steps.check.outputs.current_version }}`
            **New version:** `${{ steps.check.outputs.new_version }}`

            This PR was automatically generated by the version check workflow.

            ### Release Notes
            ${{ steps.check.outputs.release_notes }}
          branch: update/${{ matrix.image }}-${{ steps.check.outputs.new_version }}
          labels: |
            dependencies
            ${{ matrix.image }}
          delete-branch: true