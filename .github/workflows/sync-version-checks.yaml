name: Sync Version Check Matrix

on:
  push:
    branches:
      - main
    paths:
      - 'images/*/check-version.sh'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find all images with check-version.sh
        id: find-images
        run: |
          # Find all directories under images/ that contain check-version.sh
          images=$(find images -mindepth 2 -maxdepth 2 -name "check-version.sh" -exec dirname {} \; | xargs -I {} basename {} | sort | uniq)

          echo "Found images with check-version.sh:"
          echo "$images"

          # Convert to YAML array format for the matrix
          matrix_items=""
          for image in $images; do
            matrix_items="$matrix_items          - $image\n"
          done

          # Remove trailing newline
          matrix_items=$(echo -e "$matrix_items" | sed '/^$/d')

          echo "matrix_items<<EOF" >> $GITHUB_OUTPUT
          echo -e "$matrix_items" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update check-versions.yaml
        run: |
          # Read the matrix items from the previous step
          MATRIX_ITEMS="${{ steps.find-images.outputs.matrix_items }}"

          # Create a temporary file with the new matrix
          cat > /tmp/new_matrix.txt << 'EOF'
${{ steps.find-images.outputs.matrix_items }}
EOF

          # Update the check-versions.yaml file
          # This uses awk to replace the matrix.image section
          awk '
          BEGIN { in_matrix = 0; in_image = 0 }
          /^    strategy:/ { in_matrix = 1; print; next }
          /^      matrix:/ && in_matrix { in_image = 1; print; next }
          /^        image:/ && in_image {
            print
            # Print new matrix items
            system("cat /tmp/new_matrix.txt")
            # Skip old matrix items until we hit the next section
            while (getline > 0) {
              if ($0 !~ /^          -/) {
                in_image = 0
                in_matrix = 0
                print
                break
              }
            }
            next
          }
          { print }
          ' .github/workflows/check-versions.yaml > /tmp/check-versions.yaml.tmp

          mv /tmp/check-versions.yaml.tmp .github/workflows/check-versions.yaml

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet .github/workflows/check-versions.yaml; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git diff .github/workflows/check-versions.yaml
          fi

      - name: Create Pull Request
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(ci): sync version check matrix with available images"
          title: "chore(ci): sync version check matrix"
          body: |
            ## Sync Version Check Matrix

            This PR automatically updates the `check-versions.yaml` workflow matrix to include all images that have a `check-version.sh` file.

            ### Changes
            - Updated the matrix in `.github/workflows/check-versions.yaml`

            This PR was automatically generated by the sync-version-checks workflow.
          branch: sync/version-check-matrix
          labels: ci
          delete-branch: true