name: Update Dependencies

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  update-minio:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Check for new MinIO release
        id: check-minio
        run: |
          set -euo pipefail

          # Get current version from config
          CURRENT_VERSION=$(yq eval '.version' images/minio/config.yaml)
          echo "Current MinIO version: $CURRENT_VERSION"

          # Get latest release from MinIO
          LATEST_VERSION=$(curl -sI https://dl.min.io/server/minio/release/linux-amd64/minio | \
            grep -i "x-amz-meta-release-name" | \
            cut -d: -f2 | \
            tr -d ' \r\n')

          echo "Latest MinIO version: $LATEST_VERSION"

          # Compare versions
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "update_available=true" >> $GITHUB_OUTPUT
            echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "update_available=false" >> $GITHUB_OUTPUT
            echo "MinIO is up to date"
          fi

      - name: Update MinIO version
        if: steps.check-minio.outputs.update_available == 'true'
        run: |
          set -euo pipefail

          LATEST_VERSION="${{ steps.check-minio.outputs.latest_version }}"

          # Update config.yaml
          yq eval ".version = \"$LATEST_VERSION\"" -i images/minio/config.yaml
          yq eval ".build_args.RELEASE = \"$LATEST_VERSION\"" -i images/minio/config.yaml

          # Update Dockerfile ARG
          sed -i "s/^ARG RELEASE=.*/ARG RELEASE=$LATEST_VERSION/" images/minio/Dockerfile

          echo "Updated MinIO to version $LATEST_VERSION"

      - name: Check for new base image versions
        if: steps.check-minio.outputs.update_available == 'true'
        id: check-base
        run: |
          set -euo pipefail

          # Check Alpine version
          CURRENT_ALPINE=$(grep "FROM golang:" images/minio/Dockerfile | head -1 | cut -d: -f2 | cut -d- -f1)
          LATEST_ALPINE=$(curl -s https://hub.docker.com/v2/repositories/library/golang/tags?page_size=100 | \
            jq -r '.results[].name' | \
            grep -E '^[0-9]+\.[0-9]+-alpine$' | \
            sort -V | \
            tail -1 | \
            cut -d- -f1)

          echo "Current Go version: $CURRENT_ALPINE"
          echo "Latest stable Go version: $LATEST_ALPINE"

          if [ "$CURRENT_ALPINE" != "$LATEST_ALPINE" ]; then
            echo "go_update_available=true" >> $GITHUB_OUTPUT
            echo "latest_go=$LATEST_ALPINE" >> $GITHUB_OUTPUT
          fi

      - name: Update base images
        if: steps.check-base.outputs.go_update_available == 'true'
        run: |
          LATEST_GO="${{ steps.check-base.outputs.latest_go }}"
          sed -i "s/FROM golang:[0-9.]*-alpine/FROM golang:${LATEST_GO}-alpine/" images/minio/Dockerfile
          echo "Updated Go to version $LATEST_GO"

      - name: Create Pull Request
        if: steps.check-minio.outputs.update_available == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore(minio): update to ${{ steps.check-minio.outputs.latest_version }}

            - MinIO: ${{ steps.check-minio.outputs.current_version }} â†’ ${{ steps.check-minio.outputs.latest_version }}
            ${{ steps.check-base.outputs.go_update_available == 'true' && format('- Go: {0}', steps.check-base.outputs.latest_go) || '' }}
          branch: update-minio-${{ steps.check-minio.outputs.latest_version }}
          delete-branch: true
          title: "chore(minio): update to ${{ steps.check-minio.outputs.latest_version }}"
          body: |
            ## Automated Dependency Update

            This PR updates MinIO and related dependencies to their latest versions.

            ### Changes
            - **MinIO**: `${{ steps.check-minio.outputs.current_version }}` â†’ `${{ steps.check-minio.outputs.latest_version }}`
            ${{ steps.check-base.outputs.go_update_available == 'true' && format('- **Go**: `{0}`', steps.check-base.outputs.latest_go) || '' }}

            ### Release Notes
            - [MinIO Releases](https://github.com/minio/minio/releases)

            ### Testing
            - [ ] Build succeeds for linux/amd64
            - [ ] Build succeeds for linux/arm64
            - [ ] Container starts successfully
            - [ ] Basic functionality verified

            ---

            ðŸ¤– This PR was automatically created by the dependency update workflow.
          labels: |
            dependencies
            automated
